import { Component, OnInit } from '@angular/core';
import { HeaderUser } from '../../header-user/header-user';
import { Api_Service } from '../../../services/api/api_service';
import { RouterLink } from '@angular/router';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';

@Component({
  selector: 'app-cart-game',
  imports: [HeaderUser, RouterLink, CommonModule, FormsModule],
  templateUrl: './cart-game.html',
  styleUrl: './cart-game.scss',
})
export class CartGame implements OnInit {
  cartItems: any[] = [];
  total: number = 0;
  uid: number | null = null;
  constructor(private api_Service: Api_Service) {}

  async ngOnInit() {
    // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• user ‡∏à‡∏≤‡∏Å localStorage
    const userStr = localStorage.getItem('user');
    if (!userStr) {
      alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡πà‡∏≠‡∏ô');
      return;
    }

    const user = JSON.parse(userStr);
    this.uid = user.uid || user.id;
    await this.loadCart();
  }

  async loadCart() {
    if (!this.uid) return;
    try {
      this.cartItems = await this.api_Service.getCart(this.uid);
      this.total = this.cartItems.reduce((sum, item) => sum + item.price, 0);
    } catch (error) {
      console.error('‡πÇ‡∏´‡∏•‡∏î‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', error);
    }
  }

  async removeItem(cartId: number) {
    if (!confirm('‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ô‡∏µ‡πâ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?')) return;

    try {
      await this.api_Service.removeFromCart(cartId);
      alert('‡∏•‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢');
      await this.loadCart();
    } catch (error) {
      console.error('‡∏•‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', error);
      alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤');
    }
  }

  async clearCart() {
    if (!this.uid) return;
    if (!confirm('‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡πâ‡∏≤‡∏á‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?')) return;

    try {
      await this.api_Service.clearCart(this.uid);
      alert('‡∏•‡πâ‡∏≤‡∏á‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢');
      await this.loadCart();
    } catch (error) {
      console.error('‡∏•‡πâ‡∏≤‡∏á‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', error);
    }
  }

  async checkout() {
    if (!this.uid) return;
    if (this.cartItems.length === 0) {
      alert('‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤');
      return;
    }

    try {
      await this.api_Service.checkout(this.uid);
      alert('‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÅ‡∏•‡∏∞‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
      await this.loadCart();
    } catch (error) {
      // ‡πÉ‡∏ä‡πâ 'as any' ‡πÅ‡∏•‡∏∞‡∏≠‡πâ‡∏≤‡∏á‡∏ñ‡∏∂‡∏á‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ‡πÉ‡∏ô error.error
      const apiError = error as any;
      let errorMessage = '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠';

      // üí° 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á error.error.message ‡∏Å‡πà‡∏≠‡∏ô
      if (apiError.error && apiError.error.message) {
        // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢‡∏à‡∏≤‡∏Å Response Body
        errorMessage = apiError.error.message;

        // 2. Fallback: ‡∏´‡∏≤‡∏Å Service Layer ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ error ‡πÅ‡∏•‡∏∞‡πÇ‡∏¢‡∏ô‡πÅ‡∏Ñ‡πà object ‡∏ó‡∏µ‡πà‡∏°‡∏µ property 'message'
      } else if (apiError.message) {
        // ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° Http failure response: 400 OK
        errorMessage = apiError.message;
      }

      // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô Console ‡πÄ‡∏™‡∏°‡∏≠‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö (‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÑ‡∏ß‡πâ‡πÄ‡∏î‡∏¥‡∏°)
      console.error('Checkout failed. Final message:', errorMessage);
      console.error('Raw Error Object:', error);

      alert(errorMessage);
    }
  }
}
